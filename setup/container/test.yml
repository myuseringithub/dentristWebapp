version: '3'

# USAGE (from root directory): docker-compose -f ./setup/<docker-compose>.yml up
networks: 
  default:
    external: false
  proxy:
    external: true

services:

  wordpress:
    image: wordpress:latest
    # ports:
    #   - "8080:80"
    #   - "8043:80"
    # volumes:
    #   - "/app/"
    #   - "/var/log/apache2/"
    environment:
      DEPLOYMENT: production
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_HOST: mysql:3306
    # entrypoint: updateDefaultEntrypoint.
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
    networks:
      - default
      - proxy
    labels:
      - com.df.notify=true
      - com.df.distribute=true
      - com.df.servicePath=/wordpress
      - com.df.port=80

  mysql:
    image: mysql:latest
    # volumes:
    #     # - "./../volume/mysqlDatabase/:/var/lib/mysql"
        # - "../../volume/mysqlDatabase/:/docker-entrypoint-initdb.d"
    environment:
        MYSQL_ROOT_PASSWORD: wordpress
        MYSQL_DATABASE: wordpress
    networks:
      - default

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   environment:
  #     - PMA_ARBITRARY=1
  #   volumes:
  #     - /sessions
  #   # ports:
  #   #  - 8081:80
  #   # IMPORTANT: Check if extrahosts work. (How does "mysql" host translated to "db" host for usage in phpmyadmin when yaml version 3 is used.)
  #   # links:
  #   #   - mysql:db
  #   extra_hosts:
  #     - "mysql:db"
  #   networks:
  #     - default
  #   labels:
  #     - com.df.notify=true
  #     - com.df.distribute=true
  #     - com.df.servicePath=/phpmyadmin
  #     - com.df.port=80
